on:
  release:
    types: [prereleased, published, released]

# go build -gcflags=all='-l' -ldflags='-w -s -X github.com/owner/repository/core/static.Version=:version -X  github.com/owner/repository/core/static.Commit=:hash' -o bin/:bin  github.com/owner/repository/cmd/:bin
jobs:
  releases-matrix:
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [ linux, windows, darwin ]
        goarch: [ "386", amd64, arm64 ]
        exclude:
          - goos: darwin
            goarch: "386"
          - goos: windows
            goarch: arm64
    steps:
      - run: echo APP_VERSION=$(echo ${GITHUB_REF} | rev | cut -d'/' -f 1 | rev ) >> ${GITHUB_ENV}
      - uses: actions/checkout@v3
      - uses: wangyoucao577/go-release-action@v1.31
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          project_path: "./cmd/:bin"
          binary_name: ":bin"
          build_flags: "-gcflags=all='-l'"
          ldflags: "-w -s -X github.com/owner/repository/core/static.Version=${{ env.APP_VERSION }} -X  github.com/owner/repository/core/static.Commit=${{ github.sha }}"